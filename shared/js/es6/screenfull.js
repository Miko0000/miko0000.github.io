const methodMap=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],nativeAPI=(()=>{if(typeof document=="undefined")return!1;const t=methodMap[0],e={};for(const n of methodMap){const s=n?.[1];if(s in document){for(const[s,o]of n.entries())e[t[s]]=o;return e}}return!1})(),eventNameMap={change:nativeAPI.fullscreenchange,error:nativeAPI.fullscreenerror};let screenfull={request(e=document.documentElement,t){return new Promise((n,s)=>{const o=()=>{screenfull.off("change",o),n()};screenfull.on("change",o);const i=e[nativeAPI.requestFullscreen](t);i instanceof Promise&&i.then(o).catch(s)})},exit(){return new Promise((e,t)=>{if(!screenfull.isFullscreen){e();return}const n=()=>{screenfull.off("change",n),e()};screenfull.on("change",n);const s=document[nativeAPI.exitFullscreen]();s instanceof Promise&&s.then(n).catch(t)})},toggle(e,t){return screenfull.isFullscreen?screenfull.exit():screenfull.request(e,t)},onchange(e){screenfull.on("change",e)},onerror(e){screenfull.on("error",e)},on(e,t){const n=eventNameMap[e];n&&document.addEventListener(n,t,!1)},off(e,t){const n=eventNameMap[e];n&&document.removeEventListener(n,t,!1)},raw:nativeAPI};Object.defineProperties(screenfull,{isFullscreen:{get:()=>Boolean(document[nativeAPI.fullscreenElement])},element:{enumerable:!0,get:()=>document[nativeAPI.fullscreenElement]??void 0},isEnabled:{enumerable:!0,get:()=>Boolean(document[nativeAPI.fullscreenEnabled])}}),nativeAPI||(screenfull={isEnabled:!1});export default screenfull